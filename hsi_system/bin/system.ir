<?xml version="1.0" encoding="UTF-8"?>
<net.sf.orcc.df:Actor xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:net.sf.orcc.df="http://orcc.sf.net/model/2011/Df" xmlns:net.sf.orcc.ir="http://orcc.sf.net/model/2011/Ir"
    label="system" actionsOutsideFsm="#//@actions.0 #//@actions.1"
    fileName="/hsi/src/system.cal" lineNumber="5">
  <attributes name="project" stringValue="hsi"/>
  <actions>
    <body lineNumber="14" name="do_matrix">
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.2/@instructions.0/@target"
          lineNumber="19" name="i" uses="#//@actions.0/@body/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.0/@value/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@value/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@indexes.0/@use #//@actions.0/@body/@blocks.1/@blocks.2/@instructions.0/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.0/@instructions.0/@target #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.6/@target"
          lineNumber="20" name="j" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@condition/@e1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.0/@indexes.1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.0/@value/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@indexes.1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@indexes.1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@value/@e2/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@indexes.1/@use #//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.6/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@target"
          name="tmp_matrix_A" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.2/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@target"
          name="tmp_matrix_B" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.5/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@body/@blocks.2/@instructions.0/@target"
          name="local_num" uses="#//@actions.0/@body/@blocks.2/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="19">
          <target variable="#//@actions.0/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="19">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="20">
            <target variable="#//@actions.0/@body/@locals.1"/>
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </value>
          </instructions>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="20">
          <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </condition>
          <joinBlock/>
          <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="21">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </indexes>
              <target variable="#//@stateVars.0"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.0"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="22">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </indexes>
              <source variable="#//@stateVars.0"/>
              <target variable="#//@actions.0/@body/@locals.2"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="22" procedure="#//@procs.0">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprString" value="Matrix A: "/>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.2"/>
                </value>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
              </arguments>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="23">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </indexes>
              <target variable="#//@stateVars.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="MINUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.0"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
              </value>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="24">
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </indexes>
              <indexes xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.1"/>
              </indexes>
              <source variable="#//@stateVars.1"/>
              <target variable="#//@actions.0/@body/@locals.3"/>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="24" procedure="#//@procs.0">
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprString" value="Matrix B: "/>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.3"/>
                </value>
              </arguments>
              <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
                <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
              </arguments>
            </instructions>
            <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="20">
              <target variable="#//@actions.0/@body/@locals.1"/>
              <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
                <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                  <use variable="#//@actions.0/@body/@locals.1"/>
                </e1>
                <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                  <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
                </e2>
                <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
              </value>
            </instructions>
          </blocks>
        </blocks>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="19">
            <target variable="#//@actions.0/@body/@locals.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.0/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.0/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="27">
          <target variable="#//@stateVars.3"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@body/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="14" name="isSchedulable_do_matrix">
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@target"
          name="result" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.2/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.0/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_num" uses="#//@actions.0/@scheduler/@blocks.0/@instructions.1/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.0/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.0/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.0/@scheduler/@locals.1"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.0/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>do_matrix</identifiers>
    </tag>
  </actions>
  <actions>
    <body lineNumber="30" name="mean">
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.0/@instructions.1/@target #//@actions.1/@body/@blocks.1/@blocks.0/@instructions.3/@target"
          lineNumber="36" name="j" uses="#//@actions.1/@body/@blocks.1/@condition/@e1/@use #//@actions.1/@body/@blocks.1/@blocks.0/@instructions.0/@indexes.0/@use #//@actions.1/@body/@blocks.1/@blocks.0/@instructions.0/@value/@use #//@actions.1/@body/@blocks.1/@blocks.0/@instructions.1/@indexes.0/@use #//@actions.1/@body/@blocks.1/@blocks.0/@instructions.3/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.1/@blocks.0/@instructions.1/@target"
          name="tmp_vector" uses="#//@actions.1/@body/@blocks.1/@blocks.0/@instructions.2/@arguments.0/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.0/@target"
          name="tmp_mean_vector" uses="#//@actions.1/@body/@blocks.2/@instructions.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.3/@target"
          name="local_result" uses="#//@actions.1/@body/@blocks.2/@instructions.4/@arguments.1/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.5/@target"
          name="local_num2" uses="#//@actions.1/@body/@blocks.2/@instructions.6/@value/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="35" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprString" value="I'm here!"/>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="36">
          <target variable="#//@actions.1/@body/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprInt" value="0">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
          </value>
        </instructions>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockWhile" lineNumber="36">
        <condition xsi:type="net.sf.orcc.ir:ExprBinary" op="LE">
          <e1 xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.0"/>
          </e1>
          <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="2">
            <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
          </e2>
          <type xsi:type="net.sf.orcc.ir:TypeBool"/>
        </condition>
        <joinBlock/>
        <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
          <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="37">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </indexes>
            <target variable="#//@stateVars.5"/>
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </value>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstLoad" lineNumber="38">
            <indexes xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.0"/>
            </indexes>
            <source variable="#//@stateVars.5"/>
            <target variable="#//@actions.1/@body/@locals.1"/>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="38" procedure="#//@procs.2">
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@body/@locals.1"/>
              </value>
            </arguments>
            <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
              <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
            </arguments>
          </instructions>
          <instructions xsi:type="net.sf.orcc.ir:InstAssign" lineNumber="36">
            <target variable="#//@actions.1/@body/@locals.0"/>
            <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@body/@locals.0"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
            </value>
          </instructions>
        </blocks>
      </blocks>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="48" procedure="hsi_analysis/hsi_analysis.ir#//@procedures.2">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@stateVars.5"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprInt" value="3">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
            </value>
          </arguments>
          <target variable="#//@actions.1/@body/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="48">
          <target variable="#//@stateVars.2"/>
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@body/@locals.2"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="49" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprString" value="And now I'm here"/>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.2"/>
          <target variable="#//@actions.1/@body/@locals.3"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstCall" lineNumber="50" procedure="#//@procs.1">
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprString" value="The result is "/>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.3"/>
            </value>
          </arguments>
          <arguments xsi:type="net.sf.orcc.ir:ArgByVal">
            <value xsi:type="net.sf.orcc.ir:ExprString" value="\n"/>
          </arguments>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.1/@body/@locals.4"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstStore" lineNumber="51">
          <target variable="#//@stateVars.4"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="PLUS">
            <e1 xsi:type="net.sf.orcc.ir:ExprVar">
              <use variable="#//@actions.1/@body/@locals.4"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
              <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeInt" size="33"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn"/>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
    </body>
    <inputPattern/>
    <outputPattern/>
    <peekPattern/>
    <scheduler lineNumber="30" name="isSchedulable_mean">
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.2/@target"
          name="result" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.3/@value/@use">
        <type xsi:type="net.sf.orcc.ir:TypeBool"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.0/@target"
          name="local_num2" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.2/@value/@e1/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <locals assignable="true" defs="#//@actions.1/@scheduler/@blocks.0/@instructions.1/@target"
          name="local_num" uses="#//@actions.1/@scheduler/@blocks.0/@instructions.2/@value/@e2/@e1/@use">
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </locals>
      <blocks xsi:type="net.sf.orcc.ir:BlockBasic">
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.4"/>
          <target variable="#//@actions.1/@scheduler/@locals.1"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstLoad">
          <source variable="#//@stateVars.3"/>
          <target variable="#//@actions.1/@scheduler/@locals.2"/>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstAssign">
          <target variable="#//@actions.1/@scheduler/@locals.0"/>
          <value xsi:type="net.sf.orcc.ir:ExprBinary" op="LOGIC_AND">
            <e1 xsi:type="net.sf.orcc.ir:ExprBinary" op="LT">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@scheduler/@locals.1"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e1>
            <e2 xsi:type="net.sf.orcc.ir:ExprBinary" op="GE">
              <e1 xsi:type="net.sf.orcc.ir:ExprVar">
                <use variable="#//@actions.1/@scheduler/@locals.2"/>
              </e1>
              <e2 xsi:type="net.sf.orcc.ir:ExprInt" value="1">
                <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
              </e2>
              <type xsi:type="net.sf.orcc.ir:TypeBool"/>
            </e2>
            <type xsi:type="net.sf.orcc.ir:TypeBool"/>
          </value>
        </instructions>
        <instructions xsi:type="net.sf.orcc.ir:InstReturn">
          <value xsi:type="net.sf.orcc.ir:ExprVar">
            <use variable="#//@actions.1/@scheduler/@locals.0"/>
          </value>
        </instructions>
      </blocks>
      <returnType xsi:type="net.sf.orcc.ir:TypeBool"/>
    </scheduler>
    <tag>
      <identifiers>mean</identifiers>
    </tag>
  </actions>
  <procs lineNumber="22" name="print" native="true">
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="35" name="print" native="true">
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <procs lineNumber="38" name="print" native="true">
    <returnType xsi:type="net.sf.orcc.ir:TypeVoid"/>
  </procs>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.0/@target"
      lineNumber="7" name="matrix_A" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.1/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="3">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeList">
        <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="3">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
        </sizeExpr>
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </type>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.3/@target"
      lineNumber="8" name="matrix_B" uses="#//@actions.0/@body/@blocks.1/@blocks.1/@blocks.0/@instructions.4/@source">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="3">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeList">
        <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="3">
          <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
        </sizeExpr>
        <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
      </type>
    </type>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.1/@target"
      lineNumber="9" name="result" uses="#//@actions.1/@body/@blocks.2/@instructions.3/@source">
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.0/@body/@blocks.2/@instructions.1/@target"
      lineNumber="10" name="num" uses="#//@actions.0/@body/@blocks.2/@instructions.0/@source #//@actions.0/@scheduler/@blocks.0/@instructions.0/@source #//@actions.1/@scheduler/@blocks.0/@instructions.1/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.2/@instructions.6/@target"
      lineNumber="11" name="num2" uses="#//@actions.1/@body/@blocks.2/@instructions.5/@source #//@actions.1/@scheduler/@blocks.0/@instructions.0/@source">
    <initialValue xsi:type="net.sf.orcc.ir:ExprInt" value="0">
      <type xsi:type="net.sf.orcc.ir:TypeUint" size="1"/>
    </initialValue>
    <type xsi:type="net.sf.orcc.ir:TypeInt" size="32"/>
  </stateVars>
  <stateVars assignable="true" defs="#//@actions.1/@body/@blocks.1/@blocks.0/@instructions.0/@target"
      lineNumber="12" name="vector" uses="#//@actions.1/@body/@blocks.1/@blocks.0/@instructions.1/@source #//@actions.1/@body/@blocks.2/@instructions.0/@arguments.0/@value/@use">
    <type xsi:type="net.sf.orcc.ir:TypeList">
      <sizeExpr xsi:type="net.sf.orcc.ir:ExprInt" value="3">
        <type xsi:type="net.sf.orcc.ir:TypeUint" size="2"/>
      </sizeExpr>
      <type xsi:type="net.sf.orcc.ir:TypeInt" size="8"/>
    </type>
  </stateVars>
</net.sf.orcc.df:Actor>
